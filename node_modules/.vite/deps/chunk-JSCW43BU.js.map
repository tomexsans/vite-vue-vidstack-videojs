{
  "version": 3,
  "sources": ["../../vidstack/dist/dev/providers/hls/hls.js", "../../vidstack/dist/dev/providers/html/htmlâ€“media-events.js", "../../vidstack/dist/dev/providers/html/native-audio-tracks.js", "../../vidstack/dist/dev/providers/html/provider.js"],
  "sourcesContent": ["import { peek, effect } from 'maverick.js';\nimport { isUndefined, isNumber, DOMEvent, listenEvent, camelToKebabCase } from 'maverick.js/std';\nimport { G as ENABLE_AUTO_QUALITY, H as TextTrack, J as TEXT_TRACK_READY_STATE, K as TEXT_TRACK_ON_MODE_CHANGE, L as LIST_SELECT, N as SET_AUTO_QUALITY, P as LIST_ADD, Q as IS_CHROME } from '../../media-core.js';\n\nclass RAFLoop {\n  constructor(_callback) {\n    this._callback = _callback;\n  }\n  _id;\n  _start() {\n    if (!isUndefined(this._id))\n      return;\n    this._loop();\n  }\n  _stop() {\n    if (isNumber(this._id))\n      window.cancelAnimationFrame(this._id);\n    this._id = void 0;\n  }\n  _loop() {\n    this._id = window.requestAnimationFrame(() => {\n      if (isUndefined(this._id))\n        return;\n      this._callback();\n      this._loop();\n    });\n  }\n}\n\nconst toDOMEventType = (type) => camelToKebabCase(type);\nclass HLSController {\n  constructor(_video) {\n    this._video = _video;\n  }\n  _context;\n  _instance = null;\n  _stopLiveSync = null;\n  _config = {};\n  _callbacks = /* @__PURE__ */ new Set();\n  get instance() {\n    return this._instance;\n  }\n  setup(ctor, context) {\n    this._context = context;\n    const isLive = peek(context.$store.streamType).includes(\"live\"), isLiveLowLatency = peek(context.$store.streamType).includes(\"ll-\");\n    this._instance = new ctor({\n      lowLatencyMode: isLiveLowLatency,\n      backBufferLength: isLiveLowLatency ? 4 : isLive ? 8 : void 0,\n      renderTextTracksNatively: false,\n      ...this._config\n    });\n    const dispatcher = this._dispatchHLSEvent.bind(this);\n    for (const event of Object.values(ctor.Events))\n      this._instance.on(event, dispatcher);\n    this._instance.on(ctor.Events.ERROR, this._onError.bind(this));\n    for (const callback of this._callbacks)\n      callback(this._instance);\n    context.player.dispatchEvent(new DOMEvent(\"hls-instance\", { detail: this._instance }));\n    this._instance.attachMedia(this._video);\n    this._instance.on(ctor.Events.AUDIO_TRACK_SWITCHED, this._onAudioSwitch.bind(this));\n    this._instance.on(ctor.Events.LEVEL_SWITCHED, this._onLevelSwitched.bind(this));\n    this._instance.on(ctor.Events.LEVEL_LOADED, this._onLevelLoaded.bind(this));\n    this._instance.on(ctor.Events.NON_NATIVE_TEXT_TRACKS_FOUND, this._onTracksFound.bind(this));\n    this._instance.on(ctor.Events.CUES_PARSED, this._onCuesParsed.bind(this));\n    context.qualities[ENABLE_AUTO_QUALITY] = this._enableAutoQuality.bind(this);\n    listenEvent(context.qualities, \"change\", this._onQualityChange.bind(this));\n    listenEvent(context.audioTracks, \"change\", this._onAudioChange.bind(this));\n    this._stopLiveSync = effect(this._liveSync.bind(this));\n  }\n  _liveSync() {\n    if (!this._context.$store.live())\n      return;\n    const raf = new RAFLoop(this._liveSyncPosition.bind(this));\n    raf._start();\n    return raf._stop.bind(raf);\n  }\n  _liveSyncPosition() {\n    this._context.$store.liveSyncPosition.set(this._instance?.liveSyncPosition ?? Infinity);\n  }\n  _dispatchHLSEvent(eventType, detail) {\n    this._context.player.dispatchEvent(new DOMEvent(toDOMEventType(eventType), { detail }));\n  }\n  _onTracksFound(eventType, data) {\n    const event = new DOMEvent(eventType, { detail: data });\n    let currentTrack = -1;\n    for (let i = 0; i < data.tracks.length; i++) {\n      const nonNativeTrack = data.tracks[i], init = nonNativeTrack.subtitleTrack ?? nonNativeTrack.closedCaptions, track = new TextTrack({\n        id: `hls-${nonNativeTrack.kind}${i}`,\n        src: init?.url,\n        label: nonNativeTrack.label,\n        language: init?.lang,\n        kind: nonNativeTrack.kind\n      });\n      track[TEXT_TRACK_READY_STATE] = 2;\n      track[TEXT_TRACK_ON_MODE_CHANGE] = () => {\n        if (track.mode === \"showing\") {\n          this._instance.subtitleTrack = i;\n          currentTrack = i;\n        } else if (currentTrack === i) {\n          this._instance.subtitleTrack = -1;\n          currentTrack = -1;\n        }\n      };\n      if (nonNativeTrack.default)\n        track.setMode(\"showing\", event);\n      this._context.textTracks.add(track, event);\n    }\n  }\n  _onCuesParsed(eventType, data) {\n    const track = this._context.textTracks.getById(`hls-${data.track}`);\n    if (!track)\n      return;\n    const event = new DOMEvent(eventType, { detail: data });\n    for (const cue of data.cues) {\n      cue.positionAlign = \"auto\";\n      track.addCue(cue, event);\n    }\n  }\n  _onAudioSwitch(eventType, data) {\n    const track = this._context.audioTracks[data.id];\n    if (track) {\n      this._context.audioTracks[LIST_SELECT](\n        track,\n        true,\n        new DOMEvent(eventType, { detail: data })\n      );\n    }\n  }\n  _onLevelSwitched(eventType, data) {\n    const quality = this._context.qualities[data.level];\n    if (quality) {\n      this._context.qualities[LIST_SELECT](\n        quality,\n        true,\n        new DOMEvent(eventType, { detail: data })\n      );\n    }\n  }\n  _onLevelLoaded(eventType, data) {\n    if (this._context.$store.canPlay())\n      return;\n    const { type, live, totalduration: duration } = data.details;\n    const event = new DOMEvent(eventType, { detail: data });\n    this._context.delegate._dispatch(\"stream-type-change\", {\n      detail: live ? type === \"EVENT\" && Number.isFinite(duration) ? \"live:dvr\" : \"live\" : \"on-demand\",\n      trigger: event\n    });\n    this._context.delegate._dispatch(\"duration-change\", { detail: duration, trigger: event });\n    const media = this._instance.media;\n    if (this._instance.currentLevel === -1) {\n      this._context.qualities[SET_AUTO_QUALITY](true, event);\n    }\n    for (const track of this._instance.audioTracks) {\n      this._context.audioTracks[LIST_ADD](\n        {\n          id: track.id + \"\",\n          label: track.name,\n          language: track.lang || \"\",\n          kind: \"main\"\n        },\n        event\n      );\n    }\n    for (const level of this._instance.levels) {\n      this._context.qualities[LIST_ADD](\n        {\n          width: level.width,\n          height: level.height,\n          codec: level.codecSet,\n          bitrate: level.bitrate\n        },\n        event\n      );\n    }\n    media.dispatchEvent(new DOMEvent(\"canplay\", { trigger: event }));\n  }\n  _onError(eventType, data) {\n    {\n      this._context.logger?.errorGroup(`HLS error \\`${eventType}\\``).labelledLog(\"Media Element\", this._instance?.media).labelledLog(\"HLS Instance\", this._instance).labelledLog(\"Event Type\", eventType).labelledLog(\"Data\", data).labelledLog(\"Src\", peek(this._context.$store.source)).labelledLog(\"Media Store\", { ...this._context.$store }).dispatch();\n    }\n    if (data.fatal) {\n      switch (data.type) {\n        case \"networkError\":\n          this._instance?.startLoad();\n          break;\n        case \"mediaError\":\n          this._instance?.recoverMediaError();\n          break;\n        default:\n          this._instance?.destroy();\n          this._instance = null;\n          break;\n      }\n    }\n  }\n  _enableAutoQuality() {\n    if (this._instance)\n      this._instance.currentLevel = -1;\n  }\n  _onQualityChange() {\n    const { qualities } = this._context;\n    if (!this._instance || qualities.auto)\n      return;\n    this._instance[qualities.switch + \"Level\"] = qualities.selectedIndex;\n    if (IS_CHROME)\n      this._video.currentTime = this._video.currentTime;\n  }\n  _onAudioChange() {\n    const { audioTracks } = this._context;\n    if (this._instance && this._instance.audioTrack !== audioTracks.selectedIndex) {\n      this._instance.audioTrack = audioTracks.selectedIndex;\n    }\n  }\n  _destroy() {\n    if (this._context)\n      this._context.qualities[ENABLE_AUTO_QUALITY] = void 0;\n    this._instance?.destroy();\n    this._instance = null;\n    this._stopLiveSync?.();\n    this._stopLiveSync = null;\n    this._context?.logger?.info(\"\\u{1F3D7}\\uFE0F Destroyed HLS instance\");\n  }\n}\n\nexport { HLSController as H, RAFLoop as R };\n", "import { effect, onDispose } from 'maverick.js';\nimport { useDisposalBin, listenEvent, DOMEvent, isNil } from 'maverick.js/std';\nimport { R as RAFLoop } from '../hls/hls.js';\nimport { i as isHLSSrc } from '../audio/loader.js';\nimport { z as getNumberOfDecimalPlaces } from '../../media-ui.js';\nimport { I as IS_SAFARI } from '../../media-core.js';\n\nclass HTMLMediaEvents {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._attachInitialListeners();\n    effect(this._attachTimeUpdate.bind(this));\n    onDispose(this._onDispose.bind(this));\n  }\n  _disposal = useDisposalBin();\n  _waiting = false;\n  _attachedLoadStart = false;\n  _attachedCanPlay = false;\n  _timeRAF = new RAFLoop(this._onRAF.bind(this));\n  get _media() {\n    return this._provider.media;\n  }\n  get _delegate() {\n    return this._context.delegate;\n  }\n  _onDispose() {\n    this._timeRAF._stop();\n    this._disposal.empty();\n  }\n  /**\n   * The `timeupdate` event fires surprisingly infrequently during playback, meaning your progress\n   * bar (or whatever else is synced to the currentTime) moves in a choppy fashion. This helps\n   * resolve that by retrieving time updates in a request animation frame loop.\n   */\n  _onRAF() {\n    const newTime = this._provider.currentTime;\n    if (this._context.$store.currentTime() !== newTime)\n      this._updateCurrentTime(newTime);\n  }\n  _attachInitialListeners() {\n    this._attachEventListener(\"loadstart\", this._onLoadStart);\n    this._attachEventListener(\"abort\", this._onAbort);\n    this._attachEventListener(\"emptied\", this._onEmptied);\n    this._attachEventListener(\"error\", this._onError);\n    this._context.logger?.debug(\"attached initial media event listeners\");\n  }\n  _attachLoadStartListeners() {\n    if (this._attachedLoadStart)\n      return;\n    this._disposal.add(\n      this._attachEventListener(\"loadeddata\", this._onLoadedData),\n      this._attachEventListener(\"loadedmetadata\", this._onLoadedMetadata),\n      this._attachEventListener(\"canplay\", this._onCanPlay),\n      this._attachEventListener(\"canplaythrough\", this._onCanPlayThrough),\n      this._attachEventListener(\"durationchange\", this._onDurationChange),\n      this._attachEventListener(\"play\", this._onPlay),\n      this._attachEventListener(\"progress\", this._onProgress),\n      this._attachEventListener(\"stalled\", this._onStalled),\n      this._attachEventListener(\"suspend\", this._onSuspend)\n    );\n    this._attachedLoadStart = true;\n  }\n  _attachCanPlayListeners() {\n    if (this._attachedCanPlay)\n      return;\n    this._disposal.add(\n      this._attachEventListener(\"pause\", this._onPause),\n      this._attachEventListener(\"playing\", this._onPlaying),\n      this._attachEventListener(\"ratechange\", this._onRateChange),\n      this._attachEventListener(\"seeked\", this._onSeeked),\n      this._attachEventListener(\"seeking\", this._onSeeking),\n      this._attachEventListener(\"ended\", this._onEnded),\n      this._attachEventListener(\"volumechange\", this._onVolumeChange),\n      this._attachEventListener(\"waiting\", this._onWaiting)\n    );\n    this._attachedCanPlay = true;\n  }\n  _handlers = /* @__PURE__ */ new Map() ;\n  _handleDevEvent = this._onDevEvent.bind(this) ;\n  _attachEventListener(eventType, handler) {\n    this._handlers.set(eventType, handler);\n    return listenEvent(\n      this._media,\n      eventType,\n      this._handleDevEvent \n    );\n  }\n  _onDevEvent(event2) {\n    this._context.logger?.debugGroup(`\\u{1F4FA} fired \\`${event2.type}\\``).labelledLog(\"Event\", event2).labelledLog(\"Media Store\", { ...this._context.$store }).dispatch();\n    this._handlers.get(event2.type)?.call(this, event2);\n  }\n  _updateCurrentTime(time, trigger) {\n    this._delegate._dispatch(\"time-update\", {\n      // Avoid errors where `currentTime` can have higher precision.\n      detail: {\n        currentTime: Math.min(time, this._context.$store.seekableEnd()),\n        played: this._media.played\n      },\n      trigger\n    });\n  }\n  _onLoadStart(event2) {\n    if (this._media.networkState === 3) {\n      this._onAbort(event2);\n      return;\n    }\n    this._attachLoadStartListeners();\n    this._delegate._dispatch(\"load-start\", { trigger: event2 });\n  }\n  _onAbort(event2) {\n    this._delegate._dispatch(\"abort\", { trigger: event2 });\n  }\n  _onEmptied() {\n    this._delegate._dispatch(\"emptied\", { trigger: event });\n  }\n  _onLoadedData(event2) {\n    this._delegate._dispatch(\"loaded-data\", { trigger: event2 });\n  }\n  _onLoadedMetadata(event2) {\n    this._onStreamTypeChange();\n    this._attachCanPlayListeners();\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      }\n    });\n    this._delegate._dispatch(\"loaded-metadata\", { trigger: event2 });\n    if (IS_SAFARI && isHLSSrc(this._context.$store.source())) {\n      this._delegate._ready(this._getCanPlayDetail(), event2);\n    }\n  }\n  _getCanPlayDetail() {\n    return {\n      duration: this._media.duration,\n      buffered: this._media.buffered,\n      seekable: this._media.seekable\n    };\n  }\n  _onStreamTypeChange() {\n    const isLive = !Number.isFinite(this._media.duration);\n    this._delegate._dispatch(\"stream-type-change\", {\n      detail: isLive ? \"live\" : \"on-demand\"\n    });\n  }\n  _onPlay(event2) {\n    if (!this._context.$store.canPlay)\n      return;\n    this._delegate._dispatch(\"play\", { trigger: event2 });\n  }\n  _onPause(event2) {\n    if (this._media.readyState === 1 && !this._waiting)\n      return;\n    this._waiting = false;\n    this._timeRAF._stop();\n    this._delegate._dispatch(\"pause\", { trigger: event2 });\n  }\n  _onCanPlay(event2) {\n    this._delegate._ready(this._getCanPlayDetail(), event2);\n  }\n  _onCanPlayThrough(event2) {\n    if (this._context.$store.started())\n      return;\n    this._delegate._dispatch(\"can-play-through\", {\n      trigger: event2,\n      detail: this._getCanPlayDetail()\n    });\n  }\n  _onPlaying(event2) {\n    this._waiting = false;\n    this._delegate._dispatch(\"playing\", { trigger: event2 });\n    this._timeRAF._start();\n  }\n  _onStalled(event2) {\n    this._delegate._dispatch(\"stalled\", { trigger: event2 });\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", { trigger: event2 });\n    }\n  }\n  _onWaiting(event2) {\n    if (this._media.readyState < 3) {\n      this._waiting = true;\n      this._delegate._dispatch(\"waiting\", { trigger: event2 });\n    }\n  }\n  _onEnded(event2) {\n    this._timeRAF._stop();\n    this._updateCurrentTime(this._media.duration, event2);\n    this._delegate._dispatch(\"end\", { trigger: event2 });\n    if (this._context.$store.loop()) {\n      this._onLoop();\n    } else {\n      this._delegate._dispatch(\"ended\", { trigger: event2 });\n    }\n  }\n  _attachTimeUpdate() {\n    if (this._context.$store.paused()) {\n      listenEvent(this._media, \"timeupdate\", this._onTimeUpdate.bind(this));\n    }\n  }\n  _onTimeUpdate(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n  }\n  _onDurationChange(event2) {\n    this._onStreamTypeChange();\n    if (this._context.$store.ended()) {\n      this._updateCurrentTime(this._media.duration, event2);\n    }\n    this._delegate._dispatch(\"duration-change\", {\n      detail: this._media.duration,\n      trigger: event2\n    });\n  }\n  _onVolumeChange(event2) {\n    this._delegate._dispatch(\"volume-change\", {\n      detail: {\n        volume: this._media.volume,\n        muted: this._media.muted\n      },\n      trigger: event2\n    });\n  }\n  _onSeeked(event2) {\n    this._updateCurrentTime(this._media.currentTime, event2);\n    this._delegate._dispatch(\"seeked\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n    if (Math.trunc(this._media.currentTime) === Math.trunc(this._media.duration) && getNumberOfDecimalPlaces(this._media.duration) > getNumberOfDecimalPlaces(this._media.currentTime)) {\n      this._updateCurrentTime(this._media.duration, event2);\n      if (!this._media.ended) {\n        this._context.player.dispatchEvent(\n          new DOMEvent(\"media-play-request\", {\n            trigger: event2\n          })\n        );\n      }\n    }\n  }\n  _onSeeking(event2) {\n    this._delegate._dispatch(\"seeking\", {\n      detail: this._media.currentTime,\n      trigger: event2\n    });\n  }\n  _onProgress(event2) {\n    this._delegate._dispatch(\"progress\", {\n      detail: {\n        buffered: this._media.buffered,\n        seekable: this._media.seekable\n      },\n      trigger: event2\n    });\n  }\n  _onLoop() {\n    const hasCustomControls = isNil(this._media.controls);\n    if (hasCustomControls)\n      this._media.controls = false;\n    this._context.player.dispatchEvent(new DOMEvent(\"media-loop-request\"));\n  }\n  _onSuspend(event2) {\n    this._delegate._dispatch(\"suspend\", { trigger: event2 });\n  }\n  _onRateChange(event2) {\n    this._delegate._dispatch(\"rate-change\", {\n      detail: this._media.playbackRate,\n      trigger: event2\n    });\n  }\n  _onError(event2) {\n    const error = this._media.error;\n    if (!error)\n      return;\n    this._delegate._dispatch(\"error\", {\n      detail: {\n        message: error.message,\n        code: error.code,\n        mediaError: error\n      },\n      trigger: event2\n    });\n  }\n}\n\nexport { HTMLMediaEvents as H };\n", "import { listenEvent } from 'maverick.js/std';\nimport { P as LIST_ADD, X as LIST_REMOVE, L as LIST_SELECT } from '../../media-core.js';\n\nclass NativeAudioTracks {\n  constructor(_provider, _context) {\n    this._provider = _provider;\n    this._context = _context;\n    this._nativeTracks.onaddtrack = this._onAddNativeTrack.bind(this);\n    this._nativeTracks.onremovetrack = this._onRemoveNativeTrack.bind(this);\n    this._nativeTracks.onchange = this._onChangeNativeTrack.bind(this);\n    listenEvent(this._context.audioTracks, \"change\", this._onChangeTrack.bind(this));\n  }\n  get _nativeTracks() {\n    return this._provider.media.audioTracks;\n  }\n  _onAddNativeTrack(event) {\n    const _track = event.track;\n    if (_track.label === \"\")\n      return;\n    const audioTrack = {\n      id: _track.id + \"\",\n      label: _track.label,\n      language: _track.language,\n      kind: _track.kind,\n      selected: false\n    };\n    this._context.audioTracks[LIST_ADD](audioTrack, event);\n    if (_track.enabled)\n      audioTrack.selected = true;\n  }\n  _onRemoveNativeTrack(event) {\n    const track = this._context.audioTracks.getById(event.track.id);\n    if (track)\n      this._context.audioTracks[LIST_REMOVE](track, event);\n  }\n  _onChangeNativeTrack(event) {\n    let enabledTrack = this._getEnabledNativeTrack();\n    if (!enabledTrack)\n      return;\n    const track = this._context.audioTracks.getById(enabledTrack.id);\n    if (track)\n      this._context.audioTracks[LIST_SELECT](track, true, event);\n  }\n  _getEnabledNativeTrack() {\n    return Array.from(this._nativeTracks).find((track) => track.enabled);\n  }\n  _onChangeTrack(event) {\n    const { current } = event.detail;\n    if (!current)\n      return;\n    const track = this._nativeTracks.getTrackById(current.id);\n    if (track) {\n      const prev = this._getEnabledNativeTrack();\n      if (prev)\n        prev.enabled = false;\n      track.enabled = true;\n    }\n  }\n}\n\nexport { NativeAudioTracks as N };\n", "import { setAttribute, isString } from 'maverick.js/std';\nimport { b as isMediaStream } from '../audio/loader.js';\nimport { H as HTMLMediaEvents } from './htmlâ€“media-events.js';\nimport { N as NativeAudioTracks } from './native-audio-tracks.js';\n\nclass HTMLMediaProvider {\n  constructor(_media) {\n    this._media = _media;\n  }\n  setup(context) {\n    new HTMLMediaEvents(this, context);\n    if (\"audioTracks\" in this.media)\n      new NativeAudioTracks(this, context);\n  }\n  get type() {\n    return \"\";\n  }\n  get media() {\n    return this._media;\n  }\n  get paused() {\n    return this._media.paused;\n  }\n  get muted() {\n    return this._media.muted;\n  }\n  set muted(muted) {\n    this._media.muted = muted;\n  }\n  get volume() {\n    return this._media.volume;\n  }\n  set volume(volume) {\n    this._media.volume = volume;\n  }\n  get currentTime() {\n    return this._media.currentTime;\n  }\n  set currentTime(time) {\n    this._media.currentTime = time;\n  }\n  get playsinline() {\n    return this._media.hasAttribute(\"playsinline\");\n  }\n  set playsinline(playsinline) {\n    setAttribute(this._media, \"playsinline\", playsinline);\n  }\n  get playbackRate() {\n    return this._media.playbackRate;\n  }\n  set playbackRate(rate) {\n    this._media.playbackRate = rate;\n  }\n  async play() {\n    return this._media.play();\n  }\n  async pause() {\n    return this._media.pause();\n  }\n  async loadSource({ src }, preload) {\n    this._media.preload = preload;\n    if (isMediaStream(src)) {\n      this._media.srcObject = src;\n    } else {\n      this._media.srcObject = null;\n      this._media.src = isString(src) ? src : window.URL.createObjectURL(src);\n    }\n    this._media.load();\n  }\n}\n\nexport { HTMLMediaProvider as H };\n"],
  "mappings": "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",
  "names": ["event", "event"]
}
